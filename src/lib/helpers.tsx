export const numberCheck = (num: any) => typeof num === "number" && !isNaN(num);

// 2021-07-28T17:50:02.000Z
export const printPrettyDate = (dateString: string) => {
  /* dateString is the format generated by MySQL */
  let d       = new Date(dateString);
  let dateEnd = parseInt(d.getDate().toString().slice(-1));
  let suffix  = 
    dateEnd === 1 ? "st" : dateEnd === 2 ? "nd" : dateEnd === 3 ? "rd" : "th";

  const months = ["January", "February", "March", "April", "May", "June", "July",
                  "August", "September", "October", "November", "December"];

  return `${months[d.getMonth()]} ${d.getDate()}${suffix}, ${d.getFullYear()}`
};

/*
  Simplifies that common api-fetching procedure - takes the 
  setters returned by the useState hook: setSuccess to set 
  state variable that holds the data returned by this resource,
  and setFailure to set the state variable that holds an error
  response.
*/
export const fetchResource = (
    apiRoute: string, 
    setIsLoaded: (state: boolean) => void,
    setSuccess: (result: any) => void,
    setFailure: (error: any) => void
  ) => {
  return fetch(apiRoute)
    .then(response => response.json())
    .then(json => {
      setIsLoaded(true);
      setSuccess(json);
    }, error => {
      setIsLoaded(true);
      setFailure(error);
  });
}